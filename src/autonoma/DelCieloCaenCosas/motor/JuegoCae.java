/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package autonoma.DelCieloCaenCosas.motor;

/**
 *
 * @author marib
 */

import autonoma.DelCieloCaenCosas.modelo.Comida;
import autonoma.DelCieloCaenCosas.modelo.ObjetoQueCae;
import autonoma.DelCieloCaenCosas.modelo.Veneno;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;

public class JuegoCae extends JPanel implements MouseListener {
    private ArrayList<ObjetoQueCae> objetos;
    private Image imgComida, imgVeneno;
    private int puntaje = 0;

    public JuegoCae() {
        this.setPreferredSize(new Dimension(800, 600));
        this.setBackground(Color.WHITE);
        this.addMouseListener(this);
        objetos = new ArrayList<>();

        imgComida = new ImageIcon("recursos/comida.png").getImage();
        imgVeneno = new ImageIcon("recursos/veneno.png").getImage();

        // Hilos
        new Thread(() -> {
            while (true) {
                if (contar(Comida.class) < 4) {
                    objetos.add(new Comida(new Random().nextInt(760), 3, imgComida));
                }
                dormir(2000);
            }
        }).start();

        new Thread(() -> {
            while (true) {
                if (contar(Veneno.class) < 4) {
                    objetos.add(new Veneno(new Random().nextInt(760), 2, imgVeneno));
                }
                dormir(3000);
            }
        }).start();

        // Bucle principal
        new Timer(30, e -> {
            for (ObjetoQueCae o : objetos) {
                o.mover();
            }
            repaint();
        }).start();
    }

    private void dormir(int ms) {
        try { Thread.sleep(ms); } catch (InterruptedException e) {}
    }

    private int contar(Class<?> tipo) {
        int count = 0;
        for (ObjetoQueCae o : objetos) {
            if (tipo.isInstance(o)) count++;
        }
        return count;
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        for (ObjetoQueCae o : objetos) {
            g.drawImage(o.getImagen(), o.getX(), o.getY(), this);
        }
        g.setColor(Color.BLACK);
        g.setFont(new Font("Arial", Font.BOLD, 18));
        g.drawString("Puntaje: " + puntaje, 20, 20);
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            Iterator<ObjetoQueCae> it = objetos.iterator();
            while (it.hasNext()) {
                ObjetoQueCae o = it.next();
                if (o.getBounds().contains(e.getPoint())) {
                    puntaje += o.getPuntos();
                    it.remove();
                    break;
                }
            }
        }
    }

    @Override public void mousePressed(MouseEvent e) {}
    @Override public void mouseReleased(MouseEvent e) {}
    @Override public void mouseEntered(MouseEvent e) {}
    @Override public void mouseExited(MouseEvent e) {}
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
